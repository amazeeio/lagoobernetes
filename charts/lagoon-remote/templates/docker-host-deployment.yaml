apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lagoobernetes-remote.dockerHost.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "lagoobernetes-remote.dockerHost.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.dockerHost.replicaCount }}
  selector:
    matchLabels:
      {{- include "lagoobernetes-remote.dockerHost.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "lagoobernetes-remote.dockerHost.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "lagoobernetes-remote.dockerHost.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.dockerHost.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "lagoobernetes-remote.dockerHost.fullname" . }}
          securityContext:
            {{- toYaml .Values.dockerHost.securityContext | nindent 12 }}
          image: {{ .Values.dockerHost.image.name | quote }}
          imagePullPolicy: {{ .Values.dockerHost.image.pullPolicy }}
          env:
            - name: DOCKER_HOST
              value: localhost
            - name: REGISTRY
              value: {{ .Values.dockerHost.registry | quote }}
            - name: REPOSITORY_TO_UPDATE
              value: {{ .Values.dockerHost.repositoryToUpdate | quote }}
            - name: CRONJOBS
              value: |
                22 1 * * * /lagoobernetes/cronjob.sh "/prune-images.sh"
                22 */4 * * * /lagoobernetes/cronjob.sh "/remove-exited.sh"
                */15 * * * * /lagoobernetes/cronjob.sh "/update-push-images.sh"
          ports:
          - containerPort: 2375
            protocol: TCP
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 2375
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 2375
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.dockerHost.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /var/lib/docker
            name: docker-lib
      volumes:
      - name: docker-lib
      {{- if .Values.dockerHost.storage.create }}
        persistentVolumeClaim:
          claimName: {{ include "lagoobernetes-remote.dockerHost.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
      {{- with .Values.dockerHost.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.dockerHost.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.dockerHost.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
