apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: lagoobernetes-openshift-template-cli
parameters:
  - name: SERVICE_NAME
    description: Name of this service
    required: true
  - name: SAFE_BRANCH
    description: Which branch this belongs to, special chars replaced with dashes
    required: true
  - name: SAFE_PROJECT
    description: Which project this belongs to, special chars replaced with dashes
    required: true
  - name: BRANCH
    description: Which branch this belongs to, original value
    required: true
  - name: PROJECT
    description: Which project this belongs to, original value
    required: true
  - name: LAGOOBERNETES_GIT_SHA
    description: git hash sha of the current deployment
    required: true
  - name: SERVICE_ROUTER_URL
    description: URL of the Router for this service
    value: ""
  - name: OPENSHIFT_PROJECT
    description: Name of the Project that this service is in
    required: true
  - name: REGISTRY
    description: Registry where Images are pushed to
    required: true
  - name: DEPLOYMENT_STRATEGY
    description: Strategy of Deploymentconfig
    value: "Rolling"
  - name: SERVICE_IMAGE
    description: Pullable image of service
    required: true
  - name: CRONJOBS
    description: Oneliner of Cronjobs
    value: ""
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
    name: ${SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      service: ${SERVICE_NAME}
    strategy:
      type: ${DEPLOYMENT_STRATEGY}
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: ${SERVICE_NAME}
          branch: ${SAFE_BRANCH}
          project: ${SAFE_PROJECT}
      spec:
        volumes:
          - name: lagoobernetes-sshkey
            secret:
              defaultMode: 420
              secretName: lagoobernetes-sshkey
        containers:
        - image: ${SERVICE_IMAGE}
          name: ${SERVICE_NAME}
          envFrom:
          - configMapRef:
              name: lagoobernetes-env
          env:
            ## LAGOOBERNETES_GIT_SHA is injected directly and not loaded via `lagoobernetes-env` config
            ## This will cause the cli to redeploy on every deployment, even the files have not changed
            - name: LAGOOBERNETES_GIT_SHA
              value: ${LAGOOBERNETES_GIT_SHA}
            - name: JWTSECRET
              valueFrom:
                secretKeyRef:
                  name: jwtsecret
                  key: JWTSECRET
            - name: SERVICE_NAME
              value: ${SERVICE_NAME}
            - name: CRONJOBS
              value: "5 */12 * * * /lagoobernetes/cronjob.sh /calculate-storage.sh"
          volumeMounts:
            - mountPath: /var/run/secrets/lagoobernetes/sshkey/
              name: lagoobernetes-sshkey
              readOnly: true
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
    test: false
    triggers:
    - type: ConfigChange