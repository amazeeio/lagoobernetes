apiVersion: v1
kind: Template
metadata:
  name: harbor-jobservice-template
  annotations:
    description: "A template for generating Harbor's jobservice service"
parameters:
  - name: SERVICE_NAME
    description: Name of this service
    required: true
  - name: SAFE_BRANCH
    description: Which branch this belongs to, special chars replaced with dashes
    required: true
  - name: SAFE_PROJECT
    description: Which project this belongs to, special chars replaced with dashes
    required: true
  - name: BRANCH
    description: Which branch this belongs to, original value
    required: true
  - name: PROJECT
    description: Which project this belongs to, original value
    required: true
  - name: LAGOOBERNETES_GIT_SHA
    description: git hash sha of the current deployment
    required: true
  - name: SERVICE_ROUTER_URL
    description: URL of the Router for this service
    value: ""
  - name: OPENSHIFT_PROJECT
    description: Name of the Project that this service is in
    required: true
  - name: REGISTRY
    description: Registry where Images are pushed to
    required: true
  - name: DEPLOYMENT_STRATEGY
    description: Strategy of Deploymentconfig
    value: "Rolling"
  - name: SERVICE_IMAGE
    description: Pullable image of service
    required: true
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${SERVICE_NAME} # harbor-jobservice
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  data:
    config.yml: |
      protocol: "http"
      port: 8080
      worker_pool:
        workers: 10
        backend: "redis"
        redis_pool:
          redis_url: "harbor-redis:6379/1"
          namespace: "harbor_job_service_namespace"
      job_loggers:
        - name: "FILE"
          level: ERROR
          settings: # Customized settings of logger
            base_dir: "/var/log/jobs"
          sweeper:
            duration: 14 #days
            settings: # Customized settings of sweeper
              work_dir: "/var/log/jobs"
      #Loggers for the job service
      loggers:
        - name: "STD_OUTPUT"
          level: ERROR
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${SERVICE_NAME} # harbor-jobservice
    labels:
      helm.sh/resource-policy: keep
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi
- apiVersion: v1
  kind: Service
  metadata:
    name: ${SERVICE_NAME} # harbor-jobservice
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  spec:
    ports:
      - port: 80
        targetPort: 8080
    selector:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${SERVICE_NAME} # harbor-jobservice
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  spec:
    replicas: 1
    selector:
      matchLabels:
        service: ${SERVICE_NAME}
        branch: ${SAFE_BRANCH}
        project: ${SAFE_PROJECT}
    template:
      metadata:
        labels:
          service: ${SERVICE_NAME}
          branch: ${SAFE_BRANCH}
          project: ${SAFE_PROJECT}
      spec:
        hostname: ${SERVICE_NAME} # harbor-jobservice
        containers:
        - name: ${SERVICE_NAME} # harbor-jobservice
          image: ${SERVICE_IMAGE}
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /api/v1/stats
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/v1/stats
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
          env:
            - name: CORE_SECRET
              valueFrom:
                secretKeyRef:
                  name: harbor-core-secret
                  key: HARBOR_CORE_SECRET
            - name: JOBSERVICE_SECRET
              valueFrom:
                secretKeyRef:
                  name: harbor-jobservice-secret
                  key: HARBOR_JOBSERVICE_SECRET
            - name: CORE_URL
              value: "http://harbor-core"
            - name: REGISTRY_CONTROLLER_URL
              value: "http://harborregistry:8080"
            - name: LOG_LEVEL
              value: debug
            - name: HTTP_PROXY
              value: ""
            - name: HTTPS_PROXY
              value: ""
            - name: NO_PROXY
              value: "harbor-core,harbor-jobservice,harbor-database,harborclair,harborclairadapter,harborregistry,harbor-portal,127.0.0.1,localhost,.local,.internal"
          ports:
          - containerPort: 8080
          volumeMounts:
          - name: jobservice-config
            mountPath: /etc/jobservice/config.yml
            subPath: config.yml
          - name: job-logs
            mountPath: /var/log/jobs
            subPath:
        volumes:
        - name: jobservice-config
          configMap:
            name: ${SERVICE_NAME} # harbor-jobservice
        - name: job-logs
          persistentVolumeClaim:
            claimName: ${SERVICE_NAME} # harbor-jobservice
