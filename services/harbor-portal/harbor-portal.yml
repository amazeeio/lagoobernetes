apiVersion: v1
kind: Template
metadata:
  name: harbor-portal-template
  annotations:
    description: "A template for generating Harbor's portal service"
parameters:
  - name: SERVICE_NAME
    description: Name of this service
    required: true
  - name: SAFE_BRANCH
    description: Which branch this belongs to, special chars replaced with dashes
    required: true
  - name: SAFE_PROJECT
    description: Which project this belongs to, special chars replaced with dashes
    required: true
  - name: BRANCH
    description: Which branch this belongs to, original value
    required: true
  - name: PROJECT
    description: Which project this belongs to, original value
    required: true
  - name: LAGOOBERNETES_GIT_SHA
    description: git hash sha of the current deployment
    required: true
  - name: SERVICE_ROUTER_URL
    description: URL of the Router for this service
    value: ""
  - name: OPENSHIFT_PROJECT
    description: Name of the Project that this service is in
    required: true
  - name: REGISTRY
    description: Registry where Images are pushed to
    required: true
  - name: DEPLOYMENT_STRATEGY
    description: Strategy of Deploymentconfig
    value: "Rolling"
  - name: SERVICE_IMAGE
    description: Pullable image of service
    required: true
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: ${SERVICE_NAME} # harbor-portal
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  spec:
    ports:
      - port: 80
        targetPort: 8080
    selector:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${SERVICE_NAME} # harbor-portal
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  spec:
    replicas: 1
    selector:
      matchLabels:
        service: ${SERVICE_NAME}
        branch: ${SAFE_BRANCH}
        project: ${SAFE_PROJECT}
    template:
      metadata:
        labels:
          service: ${SERVICE_NAME}
          branch: ${SAFE_BRANCH}
          project: ${SAFE_PROJECT}
      spec:
        hostname: ${SERVICE_NAME} # harbor-portal
        containers:
        - name: ${SERVICE_NAME} # harbor-portal
          image: ${SERVICE_IMAGE}
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 10
          envFrom:
          - configMapRef:
              name: "lagoobernetes-env"
          ports:
          - containerPort: 8080
