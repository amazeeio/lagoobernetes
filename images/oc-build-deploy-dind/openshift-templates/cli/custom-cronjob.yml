apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: lagoobernetes-openshift-template-cli-cronjob
parameters:
  - name: SERVICE_NAME
    description: Name of this service
    required: true
  - name: SAFE_BRANCH
    description: Which branch this belongs to, special chars replaced with dashes
    required: true
  - name: SAFE_PROJECT
    description: Which project this belongs to, special chars replaced with dashes
    required: true
  - name: BRANCH
    description: Which branch this belongs to, original value
    required: true
  - name: PROJECT
    description: Which project this belongs to, original value
    required: true
  - name: LAGOOBERNETES_GIT_SHA
    description: git hash sha of the current deployment
    required: true
  - name: SERVICE_ROUTER_URL
    description: URL of the Router for this service
    value: ""
  - name: OPENSHIFT_PROJECT
    description: Name of the Project that this service is in
    required: true
  - name: REGISTRY
    description: Registry where Images are pushed to
    required: true
  - name: DEPLOYMENT_STRATEGY
    description: Strategy of Deploymentconfig
    value: "Rolling"
  - name: SERVICE_IMAGE
    description: Pullable image of service
    required: true
  - name: CRONJOB_NAME
    description: Name of this cronjob
    required: true
  - name: CRONJOB_SCHEDULE
    description: Schedule of this cronjob
    required: true
  - name: CRONJOB_COMMAND
    description: Command of this cronjob
    required: true
objects:
- apiVersion: batch/v1beta1
  kind: CronJob
  metadata:
    name: cronjob-${SERVICE_NAME}-${CRONJOB_NAME}
  spec:
    schedule: "${CRONJOB_SCHEDULE}"
    concurrencyPolicy: Forbid
    successfulJobsHistoryLimit: 0
    failedJobsHistoryLimit: 1
    startingDeadlineSeconds: 240
    jobTemplate:
      metadata:
        labels:
          cronjob: ${CRONJOB_NAME}
          branch: ${SAFE_BRANCH}
          project: ${SAFE_PROJECT}
          parent: ${SERVICE_NAME}
      spec:
        backoffLimit: 0
        template:
          metadata:
            labels:
              cronjob: ${CRONJOB_NAME}
              branch: ${SAFE_BRANCH}
              project: ${SAFE_PROJECT}
              parent: ${SERVICE_NAME}
          spec:
            tolerations:
              - effect: NoSchedule
                key: autoscaled
                operator: Equal
                value: 'true'
              - effect: NoSchedule
                key: appuio.ch/autoscaled
                operator: Equal
                value: 'true'
              - effect: NoSchedule
                key: lagoobernetes/build
                operator: Exists
            volumes:
              - name: lagoobernetes-sshkey
                secret:
                  defaultMode: 420
                  secretName: lagoobernetes-sshkey
            containers:
              - image: ${SERVICE_IMAGE}
                command:
                  - /lagoobernetes/cronjob.sh
                  - "${CRONJOB_COMMAND}"
                name: cronjob-${SERVICE_NAME}-${CRONJOB_NAME}
                envFrom:
                  - configMapRef:
                      name: lagoobernetes-env
                env:
                  ## LAGOOBERNETES_GIT_SHA is injected directly and not loaded via `lagoobernetes-env` config
                  ## This will cause the cli to redeploy on every deployment, even the files have not changed
                  - name: LAGOOBERNETES_GIT_SHA
                    value: ${LAGOOBERNETES_GIT_SHA}
                  - name: SERVICE_NAME
                    value: ${SERVICE_NAME}
                volumeMounts:
                  - mountPath: /var/run/secrets/lagoobernetes/sshkey/
                    name: lagoobernetes-sshkey
                    readOnly: true
                resources:
                  requests:
                    cpu: 10m
                    memory: 10Mi
            restartPolicy: Never