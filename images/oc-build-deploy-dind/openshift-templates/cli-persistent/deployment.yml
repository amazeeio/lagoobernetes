apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: lagoobernetes-openshift-template-cli
parameters:
  - name: SERVICE_NAME
    description: Name of this service
    required: true
  - name: SAFE_BRANCH
    description: Which branch this belongs to, special chars replaced with dashes
    required: true
  - name: SAFE_PROJECT
    description: Which project this belongs to, special chars replaced with dashes
    required: true
  - name: BRANCH
    description: Which branch this belongs to, original value
    required: true
  - name: PROJECT
    description: Which project this belongs to, original value
    required: true
  - name: LAGOOBERNETES_GIT_SHA
    description: git hash sha of the current deployment
    required: true
  - name: SERVICE_ROUTER_URL
    description: URL of the Router for this service
    value: ''
  - name: OPENSHIFT_PROJECT
    description: Name of the Project that this service is in
    required: true
  - name: REGISTRY
    description: Registry where Images are pushed to
    required: true
  - name: PERSISTENT_STORAGE_PATH
    description: Full path to which should be mounted into persistent storage
    required: true
  - name: PERSISTENT_STORAGE_NAME
    description: Name of the Persistent Volume Claim to use
    required: true
  # The following two parameters are actually not used anywhere in this YAML, but they are injected by oc-build-deploy
  # and `oc process` fails if you inject a parameter that is not defined
  - name: PERSISTENT_STORAGE_CLASS
    description: Name of the Storage Class to use
    value: ''
  - name: PERSISTENT_STORAGE_SIZE
    description: Size of the Storage to request
    value: '5Gi'
  - name: DEPLOYMENT_STRATEGY
    description: Strategy of Deploymentconfig
    value: 'Rolling'
  - name: SERVICE_IMAGE
    description: Pullable image of service
    required: true
  - name: CRONJOBS
    description: Oneliner of Cronjobs
    value: ''
  - name: ENVIRONMENT_TYPE
    description: production level of this environment
    value: 'production'
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      creationTimestamp: null
      labels:
        service: ${SERVICE_NAME}
        branch: ${SAFE_BRANCH}
        project: ${SAFE_PROJECT}
      name: ${SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        service: ${SERVICE_NAME}
      strategy:
        type: ${DEPLOYMENT_STRATEGY}
      template:
        metadata:
          creationTimestamp: null
          labels:
            service: ${SERVICE_NAME}
            branch: ${SAFE_BRANCH}
            project: ${SAFE_PROJECT}
        spec:
          tolerations:
            - effect: NoSchedule
              key: autoscaled
              operator: Equal
              value: 'true'
            - effect: NoSchedule
              key: appuio.ch/autoscaled
              operator: Equal
              value: 'true'
          volumes:
            - name: ${PERSISTENT_STORAGE_NAME}
              persistentVolumeClaim:
                claimName: ${PERSISTENT_STORAGE_NAME}
            - name: lagoobernetes-sshkey
              secret:
                defaultMode: 420
                secretName: lagoobernetes-sshkey
          priorityClassName: lagoobernetes-priority-${ENVIRONMENT_TYPE}
          containers:
            - image: ${SERVICE_IMAGE}
              name: ${SERVICE_NAME}
              envFrom:
                - configMapRef:
                    name: lagoobernetes-env
              env:
                ## LAGOOBERNETES_GIT_SHA is injected directly and not loaded via `lagoobernetes-env` config
                ## This will cause the cli to redeploy on every deployment, even the files have not changed
                - name: LAGOOBERNETES_GIT_SHA
                  value: ${LAGOOBERNETES_GIT_SHA}
                - name: SERVICE_NAME
                  value: ${SERVICE_NAME}
                - name: CRONJOBS
                  value: ${CRONJOBS}
              volumeMounts:
                - name: ${PERSISTENT_STORAGE_NAME}
                  mountPath: ${PERSISTENT_STORAGE_PATH}
                - mountPath: /var/run/secrets/lagoobernetes/sshkey/
                  name: lagoobernetes-sshkey
                  readOnly: true
              resources:
                requests:
                  cpu: 10m
                  memory: 10Mi
                limits:
                  memory: 8Gi
      test: false
      triggers:
        - type: ConfigChange
