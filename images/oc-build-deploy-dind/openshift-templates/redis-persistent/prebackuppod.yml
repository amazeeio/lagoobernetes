apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: lagoobernetes-openshift-template-prebackuppod-redis-persistent
parameters:
  - name: SERVICE_NAME
    description: Name of this service
    required: true
  - name: SERVICE_NAME_UPPERCASE
    description: Name of this service in uppercase
    required: true
  - name: SAFE_BRANCH
    description: Which branch this belongs to, special chars replaced with dashes
    required: true
  - name: SAFE_PROJECT
    description: Which project this belongs to, special chars replaced with dashes
    required: true
  - name: BRANCH
    description: Which branch this belongs to, original value
    required: true
  - name: PROJECT
    description: Which project this belongs to, original value
    required: true
  - name: LAGOOBERNETES_GIT_SHA
    description: git hash sha of the current deployment
    required: true
  - name: SERVICE_ROUTER_URL
    description: URL of the Router for this service
    value: ""
  - name: OPENSHIFT_PROJECT
    description: Name of the Project that this service is in
    required: true
  - name: REGISTRY
    description: Registry where Images are pushed to
    required: true
  - name: DEPLOYMENT_STRATEGY
    description: Strategy of Deploymentconfig
    value: "Recreate"
  - name: SERVICE_IMAGE
    description: Pullable image of service
    required: true
  - name: CRONJOBS
    description: Oneliner of Cronjobs
    value: ""
objects:
- apiVersion: backup.appuio.ch/v1alpha1
  kind: PreBackupPod
  metadata:
    name: ${SERVICE_NAME}-prebackuppod
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  spec:
    backupCommand: /bin/sh -c "/bin/busybox tar -cf - -C /data ."
    fileExtension: .${SERVICE_NAME}.tar
    pod:
      metadata:
        labels:
          prebackuppod: ${SERVICE_NAME}
          branch: ${SAFE_BRANCH}
          project: ${SAFE_PROJECT}
          parent: ${SERVICE_NAME}
      spec:
        affinity:
          podAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: service
                        operator: In
                        values:
                          - ${SERVICE_NAME}
                  topologyKey: kubernetes.io/hostname
                weight: 100
        containers:
          - args:
              - sleep
              - '3600'
            envFrom:
              - configMapRef:
                  name: lagoobernetes-env
            image: alpine
            imagePullPolicy: Always
            name: ${SERVICE_NAME}-prebackuppod
            volumeMounts:
              - mountPath: /data
                name: ${SERVICE_NAME}
        volumes:
          - name: ${SERVICE_NAME}
            persistentVolumeClaim:
              claimName: ${SERVICE_NAME}
