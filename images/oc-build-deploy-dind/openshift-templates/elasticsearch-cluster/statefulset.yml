apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: lagoobernetes-openshift-template-elasticsearch-cluster
parameters:
  - name: SERVICE_NAME
    description: Name of this service
    required: true
  - name: SAFE_BRANCH
    description: Which branch this belongs to, special chars replaced with dashes
    required: true
  - name: SAFE_PROJECT
    description: Which project this belongs to, special chars replaced with dashes
    required: true
  - name: BRANCH
    description: Which branch this belongs to, original value
    required: true
  - name: PROJECT
    description: Which project this belongs to, original value
    required: true
  - name: LAGOOBERNETES_GIT_SHA
    description: git hash sha of the current deployment
    required: true
  - name: SERVICE_ROUTER_URL
    description: URL of the Router for this service
    value: ""
  - name: OPENSHIFT_PROJECT
    description: Name of the Project that this service is in
    required: true
  - name: REGISTRY
    description: Registry where Images are pushed to
    required: true
  - name: SERVICE_IMAGE
    description: Pullable image of service
    required: true
  - name: CRONJOBS
    description: Oneliner of Cronjobs
    value: ""
  - name: ENVIRONMENT_TYPE
    description: production level of this environment
    value: 'production'
objects:
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    name: ${SERVICE_NAME}
  spec:
    serviceName: ${SERVICE_NAME}
    replicas: 3
    selector:
      matchLabels:
        service: ${SERVICE_NAME}
    template:
      metadata:
        labels:
          branch: ${SAFE_BRANCH}
          project: ${SAFE_PROJECT}
          service: ${SERVICE_NAME}
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: service
                      operator: In
                      values:
                        - ${SERVICE_NAME}
                topologyKey: kubernetes.io/hostname
        priorityClassName: lagoobernetes-priority-${ENVIRONMENT_TYPE}
        containers:
        - name: ${SERVICE_NAME}
          image: ${SERVICE_IMAGE}
          imagePullPolicy: Always
          ports:
          - containerPort: 9200
            protocol: TCP
          - containerPort: 9300
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
            initialDelaySeconds: 20
          livenessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
            initialDelaySeconds: 120
          envFrom:
          - configMapRef:
              name: lagoobernetes-env
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: ${SERVICE_NAME}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SERVICE_NAME
              value: ${SERVICE_NAME}
            - name: CRONJOBS
              value: ${CRONJOBS}
            - name: DISCOVERY_ZEN_MINIMUM_MASTER_NODES
              value: '2'
        volumes:
        - name: ${SERVICE_NAME}
          emptyDir: {}
    updateStrategy:
      type: RollingUpdate