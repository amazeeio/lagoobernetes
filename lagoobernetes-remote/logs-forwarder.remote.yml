apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: lagoobernetes-remote-openshift-template-fluentd
parameters:
  - name: SERVICE_NAME
    description: Name of this service
    required: true
  - name: SAFE_BRANCH
    description: Which branch this belongs to, special chars replaced with dashes
    required: true
  - name: SAFE_PROJECT
    description: Which project this belongs to, special chars replaced with dashes
    required: true
  - name: BRANCH
    description: Which branch this belongs to, original value
    required: true
  - name: PROJECT
    description: Which project this belongs to, original value
    required: true
  - name: LAGOOBERNETES_GIT_SHA
    description: git hash sha of the current deployment
    required: true
  - name: SERVICE_ROUTER_URL
    description: URL of the Router for this service
    value: ""
  - name: OPENSHIFT_PROJECT
    description: Name of the Project that this service is in
    required: true
  - name: REGISTRY
    description: Registry where Images are pushed to
    required: true
  - name: DEPLOYMENT_STRATEGY
    description: Strategy of Deploymentconfig
    value: "Rolling"
  - name: SERVICE_IMAGE
    description: Pullable image of service
    required: true
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
    name: ${SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      service: ${SERVICE_NAME}
    strategy:
      type: ${DEPLOYMENT_STRATEGY}
    template:
      metadata:
        labels:
          service: ${SERVICE_NAME}
          branch: ${SAFE_BRANCH}
          project: ${SAFE_PROJECT}
      spec:
        containers:
        - image: ${SERVICE_IMAGE}
          envFrom:
          - configMapRef:
              name: lagoobernetes-env
          name: ${SERVICE_NAME}
          ports:
          - containerPort: 24284
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
          volumeMounts:
          - mountPath: /fluentd/etc/
            name: config
        volumes:
        - configMap:
            items:
            - key: FLUENT_CONF
              path: fluent.conf
            name: ${SERVICE_NAME}-config
          name: config
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
    name: ${SERVICE_NAME}
  spec:
    ports:
      - name: secure-forward
        port: 24284
        protocol: TCP
        targetPort: 24284
    selector:
      service: ${SERVICE_NAME}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${SERVICE_NAME}-config
  data:
    FLUENT_CONF: |-
      <system>
        log_level info
      </system>
      <source>
        @type secure_forward
        @label @FORWARD
        shared_key "#{ENV['LOGS_FORWARDER_SHARED_KEY']}"
        self_hostname "#{ENV['HOSTNAME']}"
        secure true
        port 24284
        ca_cert_path "/fluentd/ssl/ca_cert.pem"
        ca_private_key_path /fluentd/ssl/ca_key.pem
        ca_private_key_passphrase "#{ENV['LOGS_FORWARDER_PRIVATE_KEY_PASSPHRASE']}"
      </source>
      <label @FORWARD>
        <match **>
          @type secure_forward
          self_hostname "#{ENV['HOSTNAME']}"
          secure true
          ca_cert_path "/fluentd/ssl/ca_cert.pem"
          shared_key "#{ENV['LOGS_FORWARDER_TARGET_SHARED_KEY']}"
          <server>
            host "#{ENV['LOGS_FORWARDER_TARGET_HOST']}"
            port "#{ENV['LOGS_FORWARDER_TARGET_PORT']}"
          </server>
          <buffer>
            flush_mode interval
            retry_type periodic
            retry_wait 10s
            flush_interval 1s
          </buffer>
        </match>
      </label>
